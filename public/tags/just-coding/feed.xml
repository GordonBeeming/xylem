
  <rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
      <title>xylem | Gordon Beeming</title>
      <link>https://gordonbeeming.com/blog</link>
      <description>Gordon Beeming - Father ‚Ä¢ Husband ‚Ä¢ Triathlete ‚Ä¢ SSW Solution Architect</description>
      <language>en-us</language>
      <managingEditor>website@gordonbeeming.com (Gordon Beeming)</managingEditor>
      <webMaster>website@gordonbeeming.com (Gordon Beeming)</webMaster>
      <lastBuildDate>Sun, 06 Jul 2014 14:00:00 GMT</lastBuildDate>
      <atom:link href="https://gordonbeeming.com/tags/just-coding/feed.xml" rel="self" type="application/rss+xml"/>
      
  <item>
    <guid>https://gordonbeeming.com/blog/2014-07-07/do-you-know-optional-parameters</guid>
    <title>Do you know Optional Parameters?</title>
    <link>https://gordonbeeming.com/blog/2014-07-07/do-you-know-optional-parameters</link>
    <description>Up until about an hour ago I thought I knew how optional parameters worked but didn&#39;t actually. I thought (probably without giving it too much thought) that optional parameters would compile to something that would reflect having multiple overloads as when they came out I ripped out 100s of overloads across multiple libraries and replaces them with optional parameters because it replace code like</description>
    <pubDate>Sun, 06 Jul 2014 14:00:00 GMT</pubDate>
    <author>website@gordonbeeming.com (Gordon Beeming)</author>
    <category>Language Features</category><category>CSharp</category><category>Just Coding</category>
  </item>

  <item>
    <guid>https://gordonbeeming.com/blog/2017-02-09/using-c-6-to-make-bad-sql-awesome</guid>
    <title>Using C# 6 to make &#39;bad&#39; SQL awesome</title>
    <link>https://gordonbeeming.com/blog/2017-02-09/using-c-6-to-make-bad-sql-awesome</link>
    <description>I&#39;m busy going through Pluralsight watching Exploring C# 6 with Jon Skeet by Rob Conery. Jon Skeet goes ahead and makes this epic method that looks like it&#39;s so naughty but is pretty cool.</description>
    <pubDate>Wed, 08 Feb 2017 14:00:00 GMT</pubDate>
    <author>website@gordonbeeming.com (Gordon Beeming)</author>
    <category>SQL Injection</category><category>CSharp-6</category><category>Just Coding</category>
  </item>

  <item>
    <guid>https://gordonbeeming.com/blog/2017-04-12/implementing-a-dynamic-robotstxt</guid>
    <title>Implementing a dynamic robots.txt</title>
    <link>https://gordonbeeming.com/blog/2017-04-12/implementing-a-dynamic-robotstxt</link>
    <description>Firstly you might want to know why would you want to implement a dynamic robots.txt? Isn&#39;t it better to just put a static file in the web app? Yes it is but when you running your application on certain platforms like web apps in Azure when you using deployment slots. I found this handy link which explains deployment slots quite nicely , but basically what happens is when you switch 2 slots Azure will do a virtual IP switch so traffic from your slots will now be switched (not the files from each slot).</description>
    <pubDate>Tue, 11 Apr 2017 14:00:00 GMT</pubDate>
    <author>website@gordonbeeming.com (Gordon Beeming)</author>
    <category>Azure</category><category>MVC</category><category>robots text file</category><category>Deployment slots</category><category>Just Coding</category>
  </item>

  <item>
    <guid>https://gordonbeeming.com/blog/2017-05-18/using-ngrok-to-test-web-apps-on-mobile-while-developing</guid>
    <title>Using ngrok to test web apps on mobile while developing</title>
    <link>https://gordonbeeming.com/blog/2017-05-18/using-ngrok-to-test-web-apps-on-mobile-while-developing</link>
    <description>I often never really test on mobile properly because most sites are responsive so it&#39;s easier to just resize your browser and test like that. This works great until you trying to get the perfect mobile experience and looking at every element like how drop lists present themselves with different content taking into account how wrapping might happen in mobile browser controls (which is different from web browser, even in chrome ). A long time ago I briefly used ngrok just to test how it works and now I use it constantly for testing apps while they are still in development.</description>
    <pubDate>Wed, 17 May 2017 14:00:00 GMT</pubDate>
    <author>website@gordonbeeming.com (Gordon Beeming)</author>
    <category>Mobile</category><category>Visual Studio</category><category>Just Coding</category>
  </item>

  <item>
    <guid>https://gordonbeeming.com/blog/2017-05-22/converting-html-to-pdf-using-c-and-magic</guid>
    <title>Converting Html to Pdf using C# and magic!</title>
    <link>https://gordonbeeming.com/blog/2017-05-22/converting-html-to-pdf-using-c-and-magic</link>
    <description>Everyone at some point needs to convert and html page into a PDF for some reason or another. For this I&#39;ve always used a component which was cheap at the time (and is far from it now). This component has worked well for the last 8(ish) years, most ish in the last while because it doesn&#39;t deal well with https sites. When contacting the vendor they said hey but our latest version which can be expected I guess because it&#39;s 8 years down the line but then came the it&#39;s ALL OF THE $ . The last issue is that the component I used doesn&#39;t work in Azure. That lead me to some investigation and then ultimately this post.</description>
    <pubDate>Sun, 21 May 2017 14:00:00 GMT</pubDate>
    <author>website@gordonbeeming.com (Gordon Beeming)</author>
    <category>Azure</category><category>Just Coding</category><category>GitHub Projects</category><category>Pdf-to-Html</category>
  </item>

  <item>
    <guid>https://gordonbeeming.com/blog/2017-12-28/benchmarkdotnet-isboolean-method</guid>
    <title>BenchmarkDotNet: IsBoolean method</title>
    <link>https://gordonbeeming.com/blog/2017-12-28/benchmarkdotnet-isboolean-method</link>
    <description>This post might seem weird and is slightly. It&#39;s really just a pointer as with all my posts to send people to instead of sharing lots of text &quot;on the down low&quot; üòÅ.</description>
    <pubDate>Wed, 27 Dec 2017 14:00:00 GMT</pubDate>
    <author>website@gordonbeeming.com (Gordon Beeming)</author>
    <category>BenchmarkDotNet</category><category>Just Coding</category>
  </item>

  <item>
    <guid>https://gordonbeeming.com/blog/2018-01-26/creating-an-asynchronous-authorizeattribute-in-mvc</guid>
    <title>Creating an asynchronous AuthorizeAttribute in MVC</title>
    <link>https://gordonbeeming.com/blog/2018-01-26/creating-an-asynchronous-authorizeattribute-in-mvc</link>
    <description>A couple days ago I needed to call a remote web api call in my AuthorizeAttribute sometimes but as mentioned in this (Is it possible to use async/await in MVC 4 AuthorizeAttribute?) StackOverflow question (and other forums) it isn&#39;t supported but is in the newer .net core. Unfortunately the project I needed this on was traditional MVC so I was left still finding a way .</description>
    <pubDate>Thu, 25 Jan 2018 14:00:00 GMT</pubDate>
    <author>website@gordonbeeming.com (Gordon Beeming)</author>
    <category>async</category><category>C#</category><category>MVC</category><category>Just Coding</category>
  </item>

  <item>
    <guid>https://gordonbeeming.com/blog/2018-02-15/setting-up-2-factor-authentication-and-email-verification-with-net-core-20</guid>
    <title>Setting up 2 factor authentication and email verification with .net core 2.0</title>
    <link>https://gordonbeeming.com/blog/2018-02-15/setting-up-2-factor-authentication-and-email-verification-with-net-core-20</link>
    <description>Today I played with a new .net core template just to see what the authentication options were out the box and was surprised to see just how easy it is to go from nothing to having a base project that has authentication fully baked in with 2 factor authentication and email verification.</description>
    <pubDate>Wed, 14 Feb 2018 14:00:00 GMT</pubDate>
    <author>website@gordonbeeming.com (Gordon Beeming)</author>
    <category>Security</category><category>dotnet core</category><category>Just Coding</category>
  </item>

  <item>
    <guid>https://gordonbeeming.com/blog/2018-05-13/how-do-i-fix-http-error-5025-process-failure-when-hosting-in-iis-with-dotnet-core</guid>
    <title>How do I fix HTTP Error 502.5 - Process Failure when hosting in IIS with dotnet core</title>
    <link>https://gordonbeeming.com/blog/2018-05-13/how-do-i-fix-http-error-5025-process-failure-when-hosting-in-iis-with-dotnet-core</link>
    <description>I received a new error today that I haven&#39;t received before when deploying dotnet core apps. It was as the title suggest a &quot;HTTP Error 502.5 - Process Failure&quot; error</description>
    <pubDate>Sat, 12 May 2018 14:00:00 GMT</pubDate>
    <author>website@gordonbeeming.com (Gordon Beeming)</author>
    <category>dotnet core</category><category>Just Coding</category><category>IIS</category>
  </item>

    </channel>
  </rss>
