
  <rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
      <title>xylem | Gordon Beeming</title>
      <link>https://gordonbeeming.com/blog</link>
      <description>Gordon Beeming - Father â€¢ Husband â€¢ Triathlete â€¢ SSW Solution Architect</description>
      <language>en-us</language>
      <managingEditor>website@gordonbeeming.com (Gordon Beeming)</managingEditor>
      <webMaster>website@gordonbeeming.com (Gordon Beeming)</webMaster>
      <lastBuildDate>Tue, 15 Aug 2023 00:00:00 GMT</lastBuildDate>
      <atom:link href="https://gordonbeeming.com/tags/net/feed.xml" rel="self" type="application/rss+xml"/>
      
  <item>
    <guid>https://gordonbeeming.com/blog/2023-08-15/blazor-server-events-not-triggering-when-hosted-behind-cloudflare</guid>
    <title>Blazor Server events not triggering when hosted behind Cloudflare</title>
    <link>https://gordonbeeming.com/blog/2023-08-15/blazor-server-events-not-triggering-when-hosted-behind-cloudflare</link>
    <description>Are you hosting your Blazor Server app behind Cloudflare? Are you having issues with events not triggering? Check your configuration ðŸ˜‰.</description>
    <pubDate>Tue, 15 Aug 2023 00:00:00 GMT</pubDate>
    <author>website@gordonbeeming.com (Gordon Beeming)</author>
    <category>Cloudflare</category><category>Blazor</category><category>.NET</category><category>Blazor Server</category><category>dotnet</category>
  </item>

  <item>
    <guid>https://gordonbeeming.com/blog/2023-10-29/visual-studio-item-templates-vs-net-templates-in-2023</guid>
    <title>Visual Studio Item Templates vs .NET Templates in 2023</title>
    <link>https://gordonbeeming.com/blog/2023-10-29/visual-studio-item-templates-vs-net-templates-in-2023</link>
    <description>Long ago, one of the ways we&#39;d get some reuse out of standard and utility files would be by exporting item templates. Since the .NET CLI rolled around, the approach has been different and much easier. </description>
    <pubDate>Sun, 29 Oct 2023 00:00:00 GMT</pubDate>
    <author>website@gordonbeeming.com (Gordon Beeming)</author>
    <category>git</category><category>nuget.org</category><category>.NET</category><category>.NET CLI</category><category>.editorconfig</category><category>NuGet</category><category>dotnet</category><category>dotnet new</category>
  </item>

  <item>
    <guid>https://gordonbeeming.com/blog/2023-11-05/deploying-net-templates-using-github-actions</guid>
    <title>Deploying .NET templates using GitHub Actions</title>
    <link>https://gordonbeeming.com/blog/2023-11-05/deploying-net-templates-using-github-actions</link>
    <description>Once you&#39;ve created a .NET template, you should automate the updates of the package using GitHub actions to remove the effort required in publishing updates</description>
    <pubDate>Sun, 05 Nov 2023 00:00:00 GMT</pubDate>
    <author>website@gordonbeeming.com (Gordon Beeming)</author>
    <category>git</category><category>nuget.org</category><category>GitHub Actions</category><category>GitHub</category><category>.NET</category><category>.NET CLI</category><category>NuGet</category><category>dotnet</category><category>dotnet new</category>
  </item>

  <item>
    <guid>https://gordonbeeming.com/blog/2025-06-25/solving-the-parallels-networking-puzzle-accessing-mac-localhost-from-a-windows-vm</guid>
    <title>Solving the Parallels Networking Puzzle: Accessing Mac localhost from a Windows VM</title>
    <link>https://gordonbeeming.com/blog/2025-06-25/solving-the-parallels-networking-puzzle-accessing-mac-localhost-from-a-windows-vm</link>
    <description>Ever tried to access a web app running on your Mac from a Windows VM in Parallels and been met with connection errors? You are not alone. Follow this troubleshooting guide to solve the mystery of network binding, firewalls, and the real culprit hiding in your hosts file.</description>
    <pubDate>Wed, 25 Jun 2025 00:00:00 GMT</pubDate>
    <author>website@gordonbeeming.com (Gordon Beeming)</author>
    <category>Parallels</category><category>macOS</category><category>Windows</category><category>Development</category><category>Networking</category><category>Docker</category><category>.NET</category>
  </item>

  <item>
    <guid>https://gordonbeeming.com/blog/2025-07-06/ef-cores-hidden-identity-crisis-the-owned-entity-cloning-problem</guid>
    <title>EF Core&#39;s Hidden Identity Crisis: The Owned Entity Cloning Problem</title>
    <link>https://gordonbeeming.com/blog/2025-07-06/ef-cores-hidden-identity-crisis-the-owned-entity-cloning-problem</link>
    <description>Your integration tests all pass, but your live app throws a cryptic EF Core error about modifying a key that doesn&#39;t even exist. Let&#39;s dive into the fascinating reason why and how to fix it.</description>
    <pubDate>Mon, 07 Jul 2025 00:00:00 GMT</pubDate>
    <author>website@gordonbeeming.com (Gordon Beeming)</author>
    <category>Entity Framework Core</category><category>C#</category><category>.NET</category><category>Troubleshooting</category>
  </item>

  <item>
    <guid>https://gordonbeeming.com/blog/2025-07-10/slaying-the-ef-core-cartesian-explosion-with-assplitquery</guid>
    <title>Slaying the EF Core Cartesian Explosion with AsSplitQuery()</title>
    <link>https://gordonbeeming.com/blog/2025-07-10/slaying-the-ef-core-cartesian-explosion-with-assplitquery</link>
    <description>You built a rich domain model with aggregates and child collections, but now your queries are painfully slow. Learn how a one-line change in Entity Framework Core, .AsSplitQuery(), can fix the dreaded &quot;Cartesian Explosion&quot; and make your app fly.</description>
    <pubDate>Thu, 10 Jul 2025 00:00:00 GMT</pubDate>
    <author>website@gordonbeeming.com (Gordon Beeming)</author>
    <category>C#</category><category>.NET</category><category>Entity Framework</category><category>Performance</category>
  </item>

  <item>
    <guid>https://gordonbeeming.com/blog/2025-07-17/the-deceptive-simplicity-of-polymorphism-in-net-apis</guid>
    <title>The Deceptive Simplicity of Polymorphism in .NET APIs</title>
    <link>https://gordonbeeming.com/blog/2025-07-17/the-deceptive-simplicity-of-polymorphism-in-net-apis</link>
    <description>You add one more state to your polymorphic API response, and suddenly everything breaks. This is the story of a subtle bug, a frustrating debugging session, and the one line of code that fixed it all.</description>
    <pubDate>Thu, 17 Jul 2025 00:00:00 GMT</pubDate>
    <author>website@gordonbeeming.com (Gordon Beeming)</author>
    <category>.NET</category><category>C#</category><category>JSON</category><category>ASP.NET Core</category><category>Polymorphism</category>
  </item>

  <item>
    <guid>https://gordonbeeming.com/blog/2025-08-05/architecting-csharp-domain-models-for-human-and-ai-collaboration</guid>
    <title>Architecting C# Domain Models for Human and AI Collaboration</title>
    <link>https://gordonbeeming.com/blog/2025-08-05/architecting-csharp-domain-models-for-human-and-ai-collaboration</link>
    <description>I went down a rabbit hole of extreme encapsulation in C# only to find a more pragmatic path. Discover the journey from a complex domain model to a simpler one that provides powerful guardrails for AI development tools like GitHub Copilot.</description>
    <pubDate>Tue, 05 Aug 2025 00:00:00 GMT</pubDate>
    <author>website@gordonbeeming.com (Gordon Beeming)</author>
    <category>C#</category><category>Domain-Driven Design</category><category>Architecture</category><category>.NET</category><category>Copilot</category><category>AI</category>
  </item>

  <item>
    <guid>https://gordonbeeming.com/blog/2025-07-22/keep-your-domain-clean-deserializing-with-private-setters-in-csharp</guid>
    <title>Keep Your Domain Clean: Deserializing with Private Setters in C#</title>
    <link>https://gordonbeeming.com/blog/2025-07-22/keep-your-domain-clean-deserializing-with-private-setters-in-csharp</link>
    <description>Ever created a perfectly encapsulated C# domain object with private setters, only to find System.Text.Json can&#39;t deserialize data back into it? You don&#39;t have to expose your setters! Let&#39;s explore a clean solution.</description>
    <pubDate>Tue, 22 Jul 2025 00:00:00 GMT</pubDate>
    <author>website@gordonbeeming.com (Gordon Beeming)</author>
    <category>C#</category><category>.NET</category><category>System.Text.Json</category><category>Serialization</category><category>Domain-Driven Design</category>
  </item>

  <item>
    <guid>https://gordonbeeming.com/blog/2025-08-19/securing-your-site-a-practical-hsts-preloading-guide-for-cloudflare-users</guid>
    <title>Securing Your Site: A Practical HSTS Preloading Guide for Cloudflare Users</title>
    <link>https://gordonbeeming.com/blog/2025-08-19/securing-your-site-a-practical-hsts-preloading-guide-for-cloudflare-users</link>
    <description>Learn why HSTS should not be an application concern and follow this practical guide to correctly configure it at the edge with Cloudflare, getting your site onto the HSTS preload list for maximum security.</description>
    <pubDate>Tue, 19 Aug 2025 00:00:00 GMT</pubDate>
    <author>website@gordonbeeming.com (Gordon Beeming)</author>
    <category>Security</category><category>Cloudflare</category><category>HSTS</category><category>WebDev</category><category>.NET</category>
  </item>

  <item>
    <guid>https://gordonbeeming.com/blog/2025-08-25/fail-fast-save-big-a-smarter-ci-testing-strategy</guid>
    <title>Fail Fast, Save Big: A Smarter CI Testing Strategy</title>
    <link>https://gordonbeeming.com/blog/2025-08-25/fail-fast-save-big-a-smarter-ci-testing-strategy</link>
    <description>Our CI pipeline was burning through our budget and slowing developers down. The fix wasn&#39;t about chasing raw speed, but about finding a better balance by handling failures more intelligently. Here&#39;s how we did it.</description>
    <pubDate>Mon, 25 Aug 2025 00:00:00 GMT</pubDate>
    <author>website@gordonbeeming.com (Gordon Beeming)</author>
    <category>DevOps</category><category>CI/CD</category><category>GitHub Actions</category><category>.NET</category><category>Testing</category>
  </item>

  <item>
    <guid>https://gordonbeeming.com/blog/2025-09-03/the-double-edged-sword-of-conveniently-named-exceptions</guid>
    <title>The Double-Edged Sword of Conveniently Named Exceptions</title>
    <link>https://gordonbeeming.com/blog/2025-09-03/the-double-edged-sword-of-conveniently-named-exceptions</link>
    <description>Choosing a C# exception because its name sounds right is a common anti-pattern. Learn why this leads to confusing logs, unnecessary costs, and better ways to handle errors.</description>
    <pubDate>Wed, 03 Sep 2025 00:00:00 GMT</pubDate>
    <author>website@gordonbeeming.com (Gordon Beeming)</author>
    <category>C#</category><category>.NET</category><category>Clean Code</category><category>Error Handling</category><category>Exceptions</category>
  </item>

    </channel>
  </rss>
