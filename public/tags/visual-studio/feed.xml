
  <rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
      <title>xylem | Gordon Beeming</title>
      <link>https://gordonbeeming.com/blog</link>
      <description>Gordon Beeming - Father • Husband • Triathlete • SSW Solution Architect</description>
      <language>en-us</language>
      <managingEditor>website@gordonbeeming.com (Gordon Beeming)</managingEditor>
      <webMaster>website@gordonbeeming.com (Gordon Beeming)</webMaster>
      <lastBuildDate>Mon, 28 Oct 2013 14:00:00 GMT</lastBuildDate>
      <atom:link href="https://gordonbeeming.com/tags/visual-studio/feed.xml" rel="self" type="application/rss+xml"/>
      
  <item>
    <guid>https://gordonbeeming.com/blog/2013-10-29/visual-studio-2012-paste-special-feature</guid>
    <title>Visual Studio 2012 – Paste Special Feature</title>
    <link>https://gordonbeeming.com/blog/2013-10-29/visual-studio-2012-paste-special-feature</link>
    <description>Generally the longest and most frustrating part of using a 3rd party API is making all the C# classes that the data will plugin to after you make requests into those API&#39;s.</description>
    <pubDate>Mon, 28 Oct 2013 14:00:00 GMT</pubDate>
    <author>website@gordonbeeming.com (Gordon Beeming)</author>
    <category>Visual Studio</category><category>XML</category><category>JSON</category><category>Visual Studio 2013</category>
  </item>

  <item>
    <guid>https://gordonbeeming.com/blog/2013-11-15/typescript-emit-error-write-to-file-failed</guid>
    <title>TypeScript : Emit Error: Write to file failed..</title>
    <link>https://gordonbeeming.com/blog/2013-11-15/typescript-emit-error-write-to-file-failed</link>
    <description>I have been playing around with TypeScript for a while and usually I just publish from my machine but today I decided to setup a CI build for the solution and found that I received the error</description>
    <pubDate>Thu, 14 Nov 2013 14:00:00 GMT</pubDate>
    <author>website@gordonbeeming.com (Gordon Beeming)</author>
    <category>VSTS / TFS</category><category>Visual Studio</category><category>TFS</category><category>TypeScript</category><category>TFS Build</category>
  </item>

  <item>
    <guid>https://gordonbeeming.com/blog/2014-01-03/cryptographic-failure-while-signing-assembly</guid>
    <title>Cryptographic failure while signing assembly</title>
    <link>https://gordonbeeming.com/blog/2014-01-03/cryptographic-failure-while-signing-assembly</link>
    <description>Today I got a weird error on code that should just work.</description>
    <pubDate>Thu, 02 Jan 2014 14:00:00 GMT</pubDate>
    <author>website@gordonbeeming.com (Gordon Beeming)</author>
    <category>Visual Studio</category><category>Requires Admin</category><category>Tips</category>
  </item>

  <item>
    <guid>https://gordonbeeming.com/blog/2014-01-16/getting-start-with-a-team-explorer-plugin-for-vs-2013-part-1</guid>
    <title>Getting start with a Team Explorer Plugin for VS 2013 Part 1</title>
    <link>https://gordonbeeming.com/blog/2014-01-16/getting-start-with-a-team-explorer-plugin-for-vs-2013-part-1</link>
    <description>In these posts we will be going through creating different elements that can be found in the Team Explorer, the aim is to give you the ground knowledge required to extend Team Explorer your way. For an example of some great Team Explorer plugins that demonstrate how much you can do take a look at Team Rooms for Visual Studio 2013 and News which were created by Utkarsh Shigihalli and Tarun Arora for Team Explorer in Visual Studio 2013.</description>
    <pubDate>Wed, 15 Jan 2014 14:00:00 GMT</pubDate>
    <author>website@gordonbeeming.com (Gordon Beeming)</author>
    <category>Visual Studio</category><category>Visual Studio Plugin</category><category>Getting Started</category><category>Plugins</category><category>Team Explorer</category>
  </item>

  <item>
    <guid>https://gordonbeeming.com/blog/2014-01-16/getting-start-with-a-team-explorer-plugin-for-vs-2013-part-2</guid>
    <title>Getting start with a Team Explorer Plugin for VS 2013 Part 2</title>
    <link>https://gordonbeeming.com/blog/2014-01-16/getting-start-with-a-team-explorer-plugin-for-vs-2013-part-2</link>
    <description>In Getting start with a Team Explorer Plugin for VS 2013 Part 1 we setup a base to start extending Team Explorer, this post assumes you have already have the base project setup. Creating a new Team Explorer Navigation Item Add a new const to the GuidList class (in the Guids file) like below</description>
    <pubDate>Wed, 15 Jan 2014 14:00:00 GMT</pubDate>
    <author>website@gordonbeeming.com (Gordon Beeming)</author>
    <category>Visual Studio</category><category>Visual Studio Plugin</category><category>Getting Started</category><category>Plugins</category><category>Team Explorer</category>
  </item>

  <item>
    <guid>https://gordonbeeming.com/blog/2014-01-16/getting-start-with-a-team-explorer-plugin-for-vs-2013-part-3</guid>
    <title>Getting start with a Team Explorer Plugin for VS 2013 Part 3</title>
    <link>https://gordonbeeming.com/blog/2014-01-16/getting-start-with-a-team-explorer-plugin-for-vs-2013-part-3</link>
    <description>In Getting start with a Team Explorer Plugin for VS 2013 Part 2 we created a Team Explorer Navigation Item and we will be using that item in this post and therefore assume that you have been through it already and created the navigation item.</description>
    <pubDate>Wed, 15 Jan 2014 14:00:00 GMT</pubDate>
    <author>website@gordonbeeming.com (Gordon Beeming)</author>
    <category>Visual Studio</category><category>Visual Studio Plugin</category><category>Getting Started</category><category>Plugins</category><category>Team Explorer</category>
  </item>

  <item>
    <guid>https://gordonbeeming.com/blog/2014-01-16/getting-start-with-a-team-explorer-plugin-for-vs-2013-part-4</guid>
    <title>Getting start with a Team Explorer Plugin for VS 2013 Part 4</title>
    <link>https://gordonbeeming.com/blog/2014-01-16/getting-start-with-a-team-explorer-plugin-for-vs-2013-part-4</link>
    <description>In Getting start with a Team Explorer Plugin for VS 2013 Part 3 we created a Team Explorer Page and we will be using that item in this post and therefore assume that you have been through it already and created the page.</description>
    <pubDate>Wed, 15 Jan 2014 14:00:00 GMT</pubDate>
    <author>website@gordonbeeming.com (Gordon Beeming)</author>
    <category>Visual Studio</category><category>Visual Studio Plugin</category><category>Getting Started</category><category>Team Explorer</category>
  </item>

  <item>
    <guid>https://gordonbeeming.com/blog/2014-01-21/visual-studio-2013-update-1-released</guid>
    <title>Visual Studio 2013 Update 1  Released</title>
    <link>https://gordonbeeming.com/blog/2014-01-21/visual-studio-2013-update-1-released</link>
    <description>Visual Studio 2013 Update 1 has been released and as usual you are able to use the /layout argument to download all the files so you can share them locally instead of everyone downloading them. As mentioned in Brian Harry&#39;s blog here there is no update for TFS this time round but good things are coming for TFS Update 2.</description>
    <pubDate>Mon, 20 Jan 2014 14:00:00 GMT</pubDate>
    <author>website@gordonbeeming.com (Gordon Beeming)</author>
    <category>Visual Studio</category><category>Visual Studio Update</category>
  </item>

  <item>
    <guid>https://gordonbeeming.com/blog/2014-02-25/visual-studio-hangs-systemcertificates-fiddler</guid>
    <title>Visual Studio Hangs + SystemCertificates + Fiddler</title>
    <link>https://gordonbeeming.com/blog/2014-02-25/visual-studio-hangs-systemcertificates-fiddler</link>
    <description>For the last while I have been experiencing weird hangs with Visual Studio 2013. To try identify what was causing the hangs or at least where about the problem was I ran ProcMon.exe on devenv.exe and the point where Visual Studio hung I was getting the below output recursively</description>
    <pubDate>Mon, 24 Feb 2014 14:00:00 GMT</pubDate>
    <author>website@gordonbeeming.com (Gordon Beeming)</author>
    <category>Visual Studio</category><category>Fiddler</category><category>System Certificates</category>
  </item>

  <item>
    <guid>https://gordonbeeming.com/blog/2014-04-24/hubstt-will-save-your-life</guid>
    <title>Hubs.tt will save your life</title>
    <link>https://gordonbeeming.com/blog/2014-04-24/hubstt-will-save-your-life</link>
    <description>Updates have been made, see the end of the post</description>
    <pubDate>Wed, 23 Apr 2014 14:00:00 GMT</pubDate>
    <author>website@gordonbeeming.com (Gordon Beeming)</author>
    <category>SignalR</category><category>Visual Studio</category><category>TypeScript</category><category>GitHub Projects</category>
  </item>

  <item>
    <guid>https://gordonbeeming.com/blog/2014-07-17/introduction-to-dotnet-pretty</guid>
    <title>Introduction to DotNet Pretty</title>
    <link>https://gordonbeeming.com/blog/2014-07-17/introduction-to-dotnet-pretty</link>
    <description>Another thing that come out of last weeks training was Visual Studio Debuggers. This lead to me finding the coolest visualizer ever called TPL Dataflow Debugger Visualizer which allows you to easily visualize your TPL Dataflow</description>
    <pubDate>Wed, 16 Jul 2014 14:00:00 GMT</pubDate>
    <author>website@gordonbeeming.com (Gordon Beeming)</author>
    <category>Visual Studio</category><category>Visual Studio Plugin</category><category>DotNet Pretty</category>
  </item>

  <item>
    <guid>https://gordonbeeming.com/blog/2014-07-28/tfs-work-item-visualizers</guid>
    <title>TFS Work Item Visualizers</title>
    <link>https://gordonbeeming.com/blog/2014-07-28/tfs-work-item-visualizers</link>
    <description>In my last post (Introduction to DotNet Pretty) I mentioned that I would be added more visualizers to DotNet Pretty soon . Today I finally managed to get around to that and added some visualizers for TFS Work Items.</description>
    <pubDate>Sun, 27 Jul 2014 14:00:00 GMT</pubDate>
    <author>website@gordonbeeming.com (Gordon Beeming)</author>
    <category>VSTS / TFS</category><category>Visual Studio</category><category>TFS</category><category>DotNet Pretty</category>
  </item>

  <item>
    <guid>https://gordonbeeming.com/blog/2014-09-25/turning-on-local-cache-for-nuget</guid>
    <title>Turning &quot;on&quot; local cache for NuGet</title>
    <link>https://gordonbeeming.com/blog/2014-09-25/turning-on-local-cache-for-nuget</link>
    <description>My internet connection is slow or down quite a lot. One of the things Robert MacLean pointed out today in a presentation at a Microsoft Dev Day event today is that is that you can make use of the local cache from previous downloaded packages. Below is how to do this</description>
    <pubDate>Wed, 24 Sep 2014 14:00:00 GMT</pubDate>
    <author>website@gordonbeeming.com (Gordon Beeming)</author>
    <category>Visual Studio</category><category>NuGet</category>
  </item>

  <item>
    <guid>https://gordonbeeming.com/blog/2015-05-18/connecting-visual-studio-to-vso</guid>
    <title>Connecting Visual Studio to VSTS</title>
    <link>https://gordonbeeming.com/blog/2015-05-18/connecting-visual-studio-to-vso</link>
    <description>This post is part of an overall Series on Visual Studio Online.</description>
    <pubDate>Sun, 17 May 2015 14:00:00 GMT</pubDate>
    <author>website@gordonbeeming.com (Gordon Beeming)</author>
    <category>VSTS / TFS</category><category>Visual Studio</category><category>VSTS Series</category><category>Visual Studio Team Services</category>
  </item>

  <item>
    <guid>https://gordonbeeming.com/blog/2017-03-08/so-i-installed-vs-enterprise-2017-and-have-no-mtm-where-is-it</guid>
    <title>So I installed VS Enterprise 2017 and have no MTM, where is it?</title>
    <link>https://gordonbeeming.com/blog/2017-03-08/so-i-installed-vs-enterprise-2017-and-have-no-mtm-where-is-it</link>
    <description>If you&#39;ve installed Visual Studio 2017 Enterprise and weren&#39;t one of the people that went over to the Individual Components tab to see what you weren&#39;t installing you probably don&#39;t have Microsoft Test Manager installed.</description>
    <pubDate>Tue, 07 Mar 2017 14:00:00 GMT</pubDate>
    <author>website@gordonbeeming.com (Gordon Beeming)</author>
    <category>Visual Studio</category><category>Visual Studio 2017</category><category>Test Manager</category>
  </item>

  <item>
    <guid>https://gordonbeeming.com/blog/2017-04-23/setting-up-a-standard-continuous-integration-build-with-vststfs</guid>
    <title>Setting up a standard continuous integration build with VSTS/TFS</title>
    <link>https://gordonbeeming.com/blog/2017-04-23/setting-up-a-standard-continuous-integration-build-with-vststfs</link>
    <description>If you do a quick Google for pros of setting up continuous integration you&#39;ll come across a lot of articles about how good setting up continuous integration (CI) is compared to googling cons of setting up continuous integration which basically gives you the same posts of the the pros search so we won&#39;t dig too much into that now .</description>
    <pubDate>Sat, 22 Apr 2017 14:00:00 GMT</pubDate>
    <author>website@gordonbeeming.com (Gordon Beeming)</author>
    <category>VSTS / TFS</category><category>Visual Studio</category><category>Build Automation</category><category>Visual Studio Marketplace</category><category>Maximum Effort</category>
  </item>

  <item>
    <guid>https://gordonbeeming.com/blog/2017-04-23/setting-up-net-core-continuous-integration-build-with-vststfs</guid>
    <title>Setting up .net core continuous integration build with VSTS/TFS</title>
    <link>https://gordonbeeming.com/blog/2017-04-23/setting-up-net-core-continuous-integration-build-with-vststfs</link>
    <description>You might be wondering after recently posting Setting up a standard continuous integration build with VSTS/TFS why I&#39;d need to post specifically on .net core. After all it&#39;s still a Visual Studio solution so things should just work, the keyword here is should . Things didn&#39;t just work when I tried to get this working so decided to share my experience here (as well as document it for myself later ).</description>
    <pubDate>Sat, 22 Apr 2017 14:00:00 GMT</pubDate>
    <author>website@gordonbeeming.com (Gordon Beeming)</author>
    <category>VSTS / TFS</category><category>Visual Studio</category><category>Automated Builds</category><category>dotnet core</category>
  </item>

  <item>
    <guid>https://gordonbeeming.com/blog/2017-04-30/generating-code-documentation-using-ghost-doc-enterprise</guid>
    <title>Generating code documentation using Ghost Doc Enterprise</title>
    <link>https://gordonbeeming.com/blog/2017-04-30/generating-code-documentation-using-ghost-doc-enterprise</link>
    <description>I&#39;ve recently started catching up with all the blogs that I&#39;ve wanted to write and have had flagged to write for a long time. This one I have had flagged since 26 January 2016.</description>
    <pubDate>Sat, 29 Apr 2017 14:00:00 GMT</pubDate>
    <author>website@gordonbeeming.com (Gordon Beeming)</author>
    <category>Visual Studio</category><category>C#</category><category>Ghost Doc</category><category>Automated Builds</category>
  </item>

  <item>
    <guid>https://gordonbeeming.com/blog/2017-05-18/using-ngrok-to-test-web-apps-on-mobile-while-developing</guid>
    <title>Using ngrok to test web apps on mobile while developing</title>
    <link>https://gordonbeeming.com/blog/2017-05-18/using-ngrok-to-test-web-apps-on-mobile-while-developing</link>
    <description>I often never really test on mobile properly because most sites are responsive so it&#39;s easier to just resize your browser and test like that. This works great until you trying to get the perfect mobile experience and looking at every element like how drop lists present themselves with different content taking into account how wrapping might happen in mobile browser controls (which is different from web browser, even in chrome ). A long time ago I briefly used ngrok just to test how it works and now I use it constantly for testing apps while they are still in development.</description>
    <pubDate>Wed, 17 May 2017 14:00:00 GMT</pubDate>
    <author>website@gordonbeeming.com (Gordon Beeming)</author>
    <category>Mobile</category><category>Visual Studio</category><category>Just Coding</category>
  </item>

  <item>
    <guid>https://gordonbeeming.com/blog/2017-12-07/work-around-for-net-framework-47-or-a-later-update-is-already-installed-on-this-computer</guid>
    <title>Work Around for .NET Framework 4.7 or a later update is already installed on this computer</title>
    <link>https://gordonbeeming.com/blog/2017-12-07/work-around-for-net-framework-47-or-a-later-update-is-already-installed-on-this-computer</link>
    <description>I see this message most times I format my machines after opening existing projects in Visual Studio and I always forgot how I solve it</description>
    <pubDate>Wed, 06 Dec 2017 14:00:00 GMT</pubDate>
    <author>website@gordonbeeming.com (Gordon Beeming)</author>
    <category>Visual Studio</category><category>dotnet</category>
  </item>

  <item>
    <guid>https://gordonbeeming.com/blog/2018-03-26/set-which-chrome-profile-for-visual-studio-to-use</guid>
    <title>Set which chrome profile for Visual Studio to use</title>
    <link>https://gordonbeeming.com/blog/2018-03-26/set-which-chrome-profile-for-visual-studio-to-use</link>
    <description>At MVP Summit this year one of the valuable things I learnt (which I can share ) was from Colin Dembovsky (ALM MVP) which was Using Chrome to Solve Identity Hell. Now I knew chrome profiles existed but never thought of using them to solve the problem of different identities, in-private mode was a way of doing things but you always lost that when closing the session so wasn&#39;t that great. Not going to talk much about that here, you can read his post to find out more.</description>
    <pubDate>Sun, 25 Mar 2018 14:00:00 GMT</pubDate>
    <author>website@gordonbeeming.com (Gordon Beeming)</author>
    <category>Visual Studio</category><category>Productivity</category><category>Chrome</category>
  </item>

  <item>
    <guid>https://gordonbeeming.com/blog/2019-03-18/missing-ctrl-enter-in-visual-studio-to-commit-changes-here-s-how-you-can-add-it</guid>
    <title>Missing ctrl + enter in Visual Studio to commit changes? Here&#39;s how you can add it</title>
    <link>https://gordonbeeming.com/blog/2019-03-18/missing-ctrl-enter-in-visual-studio-to-commit-changes-here-s-how-you-can-add-it</link>
    <description>So something that you&#39;ve probably noticed when using dev tools in the web and Visual Studio Code is that you can hit ctrl + enter and with this you may have noticed that in Visual Studio you can&#39;t do that. Below you&#39;ll see how you can add this to your IDE.</description>
    <pubDate>Sun, 17 Mar 2019 14:00:00 GMT</pubDate>
    <author>website@gordonbeeming.com (Gordon Beeming)</author>
    <category>git</category><category>VSTS / TFS</category><category>Visual Studio</category>
  </item>

    </channel>
  </rss>
